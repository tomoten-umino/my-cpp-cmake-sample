name: build-test

on:
  # for debug
  workflow_dispatch:
  # for pull request check
  pull_request:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-22.04
    container:
      image: mcr.microsoft.com/vscode/devcontainers/cpp:0-bullseye

    steps:
      - name: update container package
        run: |
          apt-get update

      - name: install gtest
        run: |
          wget https://github.com/google/googletest/archive/release-1.12.1.tar.gz -O - | tar xzvf - 
          mkdir -p /usr/local/src 
          mv ./googletest-release-1.12.1 /usr/local/src/
          cd /usr/local/src/googletest-release-1.12.1
          mkdir ./build 
          cd ./build 
          cmake .. 
          make install 
          rm -rf /usr/local/src/googletest-release-1.12.1

      - name: checkout code
        uses: actions/checkout@v3

      - name: build
        run: |
          mkdir build; cd build
          cmake ..
          make all
          cd ..; tar czvf build.tar.gz build

      - name: upload test binary
        uses: actions/upload-artifact@v3
        with:
          name: test-driver
          path: build.tar.gz
          retention-days: 1

  unit-test:
    needs: build
    runs-on: ubuntu-22.04
    container:
      image: mcr.microsoft.com/vscode/devcontainers/cpp:0-bullseye

    steps:
      - name: update container package
        run: |
          apt-get update

      - name: checkout code
        uses: actions/checkout@v3

      - name: download test binary
        uses: actions/download-artifact@v3
        with:
          name: test-driver

      - name: run unit-test
        run: |
          pwd
          tar xzvf build.tar.gz
          chmod 755 build/tests/unit-test
          # run unit-test
          build/tests/unit-test
          find . -name "*.gc*"
          # get coverage rate
          coverate_rate=""
          #gcov -n ./build/tests/CMakeFiles/unit-test.dir/__/lib/mylib/mylib.cpp.gcda
          gcov -n ./build/tests/CMakeFiles/unit-test.dir/__/lib/mylib/mylib.cpp.gcda |
          while read -r FILE; read -r LINE;
          do
            echo "File: ${FILE}"
            echo "Line: ${LINE}"
            if echo "${FILE}" | grep "mylib" >/dev/null; then
              coverate_rate=$(echo "${LINE}" | sed -n 's/Lines executed://p' | sed -n 's/%.*//p')
            fi
          done
          echo "$coverate_rate" >> $GITHUB_STEP_SUMMARY
